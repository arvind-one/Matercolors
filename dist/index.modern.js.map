{"version":3,"file":"index.modern.js","sources":["../src/global.constants.js","../src/color.utils.js","../src/goldenPalettes.utils.js","../src/goldenPalettes.js","../src/index.js"],"sourcesContent":["export const TwoE16 = 2 ** 16\nexport const keys = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 'A100', 'A200', 'A400', 'A700']\nexport const defaultOptions = {\n  threshold: 128,\n  showContrastText: false\n}\n","/* eslint-disable no-bitwise */\nexport function hexToRgba (hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  return result\n    ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    }\n    : {}\n}\nexport function normalizeRGB (rgbObj) {\n  return {\n    red: rgbObj.r / 255,\n    green: rgbObj.g / 255,\n    blue: rgbObj.b / 255,\n    alpha: 1\n  }\n}\nexport function componentToHex (c) {\n  const hex = c.toString(16)\n  return hex.length === 1 ? `0${hex}` : hex\n}\nexport function rgbToHex (r, g, b) {\n  return `#${componentToHex(r)}${componentToHex(g)}${componentToHex(b)}`\n}\nexport function getContrastText ({ r, g, b }, threshold) {\n  const contrast =\n    (Math.round(r * 299) + Math.round(g * 587) + Math.round(b * 114)) / 1000\n  return contrast >= threshold ? 'black' : 'white'\n}\n\nexport function rotateColorBy (hex, rotationAmount) {\n  const rgb = hexToRgba(hex)\n  let r = rgb.r / 255.0\n  let g = rgb.g / 255.0\n  let b = rgb.b / 255.0\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n  let h\n  let s\n  const l = (max + min) / 2.0\n  if (max === min) {\n    h = 0\n    s = 0 // achromatic\n  } else {\n    const d = max - min\n    s = l > 0.5 ? d / (2.0 - max - min) : d / (max + min)\n    if (max === r && g >= b) {\n      h = 1.0472 * (g - b) / d\n    } else if (max === r && g < b) {\n      h = 1.0472 * (g - b) / d + 6.2832\n    } else if (max === g) {\n      h = 1.0472 * (b - r) / d + 2.0944\n    } else if (max === b) {\n      h = 1.0472 * (r - g) / d + 4.1888\n    }\n  }\n  h = h / 6.2832 * 360.0 + 0\n  // Shift hue to opposite side of wheel and convert to [0-1] value\n  h += rotationAmount\n  if (h > 360) {\n    h -= 360\n  }\n  h /= 360\n  if (s === 0) {\n    r = l\n    g = l\n    b = l // achromatic\n  } else {\n    const hue2rgb = function hue2rgb (p, q, T) {\n      let t = T\n      if (t < 0) t += 1\n      if (t > 1) t -= 1\n      if (t < 1 / 6) return p + (q - p) * 6 * t\n      if (t < 1 / 2) return q\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n      return p\n    }\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s\n    const p = 2 * l - q\n\n    r = hue2rgb(p, q, h + 1 / 3)\n    g = hue2rgb(p, q, h)\n    b = hue2rgb(p, q, h - 1 / 3)\n  }\n  r = Math.round(r * 255)\n  g = Math.round(g * 255)\n  b = Math.round(b * 255)\n  // Convert r b and g values to hex\n  const final = b | (g << 8) | (r << 16)\n  return `#${(0x1000000 | final).toString(16).substring(1)}`\n}\n","/* eslint-disable no-nested-ternary */\n// Local Functions\nfunction isWithinRange (num, max, term) {\n  if (Number.isNaN(num) || num < 0 || num > max) throw new RangeError(`${num} for ${term} is not between 0 and ${max}`)\n}\nfunction sRGB2linear (a) {\n  /* Send this function a decimal sRGB gamma encoded color value *\n   * between 0.0 and 1.0, and it returns a linearized value.     */\n  return a <= 0.04045 ? a / 12.92 : (((a + 0.055) / 1.055) ** 2.4)\n}\nfunction forwardTransformer (a) {\n  /* Computes f(t) for Forward Transformation where t is of the form A/normalized_A and the *\n   * denominator term correspond to CIEXYZ tristimulus values of the reference white points */\n  const b = 6 / 29\n  const c = 1 / (3 * (b ** 2))\n  return a > (b ** 3) ? (a ** (1 / 3)) : c * a + 4 / 29\n}\n// Exported Functions\nexport function minOfMax (a, b, c) {\n  return Math.min(Math.max(a, b), c)\n}\nexport function linear2sRGB (a) {\n  // Converts linear channels to their sRGB counterparts.\n  return a <= 0.0031308 ? 12.92 * a : 1.055 * (a ** (1 / 2.4)) - 0.055\n}\nexport function reverseTransformer (a) {\n  // The function for reversing transformation.\n  const b = 6 / 29\n  const c = 3 * (b ** 2)\n  return a > b ? (a ** 3) : c * (a - 4 / 29)\n}\nexport function getHueDegrees (a, b) {\n  // This function returns Hue Degrees for given coordinates in LAB Color Space.\n  if (Math.abs(a) < 1e-4 && Math.abs(b) < 1e-4) return 0\n  const A = 180 * Math.atan2(a, b) / Math.PI\n  return A >= 0 ? A : A + 360\n}\nexport class ConstrainRGBA {\n  constructor (a, b, c, D) {\n    const d = D === undefined ? 1 : D\n    this.red = a\n    this.green = b\n    this.blue = c\n    this.alpha = d\n    isWithinRange(a, 1, 'red')\n    isWithinRange(b, 1, 'green')\n    isWithinRange(c, 1, 'blue')\n    isWithinRange(d, 1, 'alpha')\n  }\n}\nexport class ConstrainHCLA {\n  constructor (a, b, c, D) {\n    const d = D === undefined ? 1 : D\n    this.g = a\n    this.T = b\n    this.hue = c\n    this.alpha = d\n    isWithinRange(a, Number.MAX_VALUE, 'lightness')\n    isWithinRange(b, Number.MAX_VALUE, 'chroma')\n    isWithinRange(c, 360, 'hue')\n    isWithinRange(d, 1, 'alpha')\n  }\n}\nexport function computeLABterms (a) {\n  // Compute the Polar Parameters for Chroma (C*) and Hue (h_ab) in the CIELAB Space\n  return new ConstrainHCLA(\n    a.g,\n    Math.sqrt((a.A ** 2) + (a.B ** 2)), // Chroma\n    (180 * Math.atan2(a.B, a.A) / Math.PI + 360) % 360, // Hue\n    a.alpha\n  )\n}\nexport class ValidateBounds {\n  constructor (a, b, c, D) {\n    const d = D === undefined ? 1 : D\n    this.g = a\n    this.A = b\n    this.B = c\n    this.alpha = d\n    isWithinRange(a, Number.MAX_VALUE, 'lightness')\n    isWithinRange(d, 1, 'alpha')\n  }\n}\nexport function ConvertToLAB (rgb) {\n  const red = sRGB2linear(rgb.red)\n  const green = sRGB2linear(rgb.green)\n  const blue = sRGB2linear(rgb.blue)\n  const D65 = 0.2126729 * red + 0.7151522 * green + 0.072175 * blue // Reference\n  return new ValidateBounds(\n    116 * forwardTransformer(D65) - 16,\n    500 *\n      (forwardTransformer((0.4124564 * red + 0.3575761 * green + 0.1804375 * blue) / 0.95047) - forwardTransformer(D65)),\n    200 *\n      (forwardTransformer(D65) - forwardTransformer((0.0193339 * red + 0.119192 * green + 0.9503041 * blue) / 1.08883)),\n    rgb.alpha\n  )\n}\n","/* eslint-disable no-nested-ternary */\nimport {\n  ConstrainRGBA,\n  minOfMax,\n  ValidateBounds,\n  ConvertToLAB,\n  ConstrainHCLA,\n  computeLABterms,\n  linear2sRGB,\n  reverseTransformer,\n  getHueDegrees\n} from './goldenPalettes.utils.js'\nimport {\n  hexToRgba,\n  normalizeRGB,\n} from './color.utils.js'\n// Local Constants\nconst KdA = [\n  [\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FF8A80'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FF5252'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FF1744'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#D50000')))\n  ],\n  [\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FF80AB'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FF4081'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#F50057'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#C51162')))\n  ],\n  [\n    new ConvertToLAB(normalizeRGB(hexToRgba('#EA80FC'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#E040FB'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#D500F9'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#AA00FF')))\n  ],\n  [\n    new ConvertToLAB(normalizeRGB(hexToRgba('#B388FF'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#7C4DFF'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#651FFF'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#6200EA')))\n  ],\n  [\n    new ConvertToLAB(normalizeRGB(hexToRgba('#8C9EFF'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#536DFE'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#3D5AFE'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#304FFE')))\n  ],\n  [\n    new ConvertToLAB(normalizeRGB(hexToRgba('#82B1FF'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#448AFF'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#2979FF'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#2962FF')))\n  ],\n  [\n    new ConvertToLAB(normalizeRGB(hexToRgba('#80D8FF'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#40C4FF'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#00B0FF'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#0091EA')))\n  ],\n  [\n    new ConvertToLAB(normalizeRGB(hexToRgba('#84FFFF'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#18FFFF'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#00E5FF'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#00B8D4')))\n  ],\n  [\n    new ConvertToLAB(normalizeRGB(hexToRgba('#A7FFEB'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#64FFDA'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#1DE9B6'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#00BFA5')))\n  ],\n  [\n    new ConvertToLAB(normalizeRGB(hexToRgba('#B9F6CA'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#69F0AE'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#00E676'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#00C853')))\n  ],\n  [\n    new ConvertToLAB(normalizeRGB(hexToRgba('#CCFF90'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#B2FF59'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#76FF03'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#64DD17')))\n  ],\n  [\n    new ConvertToLAB(normalizeRGB(hexToRgba('#F4FF81'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#EEFF41'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#C6FF00'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#AEEA00')))\n  ],\n  [\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FFFF8D'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FFFF00'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FFEA00'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FFD600')))\n  ],\n  [\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FFE57F'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FFD740'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FFC400'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FFAB00')))\n  ],\n  [\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FFD180'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FFAB40'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FF9100'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FF6D00')))\n  ],\n  [\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FF9E80'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FF6E40'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#FF3D00'))),\n    new ConvertToLAB(normalizeRGB(hexToRgba('#DD2C00')))\n  ]\n]\nconst Kd = [\n  [\n    new ValidateBounds(\n      94.67497003305085,\n      7.266715066863771,\n      1.000743882272359\n    ),\n    new ValidateBounds(86.7897416761699, 18.370736761658012, 4.23637133971424),\n    new ValidateBounds(72.0939162832561, 31.7948058298117, 13.2972443996896),\n    new ValidateBounds(\n      61.79353370051851,\n      44.129498163764545,\n      20.721477326799608\n    ),\n    new ValidateBounds(\n      57.194195398949574,\n      59.6450006197361,\n      34.999830012940194\n    ),\n    new ValidateBounds(\n      55.603951071861374,\n      66.01287384845483,\n      47.67169313982772\n    ),\n    new ValidateBounds(\n      51.66348502954747,\n      64.7487785020625,\n      43.244876694855286\n    ),\n    new ValidateBounds(\n      47.09455666350969,\n      62.29836039074277,\n      40.67775424698388\n    ),\n    new ValidateBounds(\n      43.77122063388739,\n      60.28633509183384,\n      40.31444686692952\n    ),\n    new ValidateBounds(\n      39.555187078007386,\n      58.703681355389975,\n      41.66495027798629\n    )\n  ],\n  [\n    new ValidateBounds(\n      92.68053776327665,\n      9.515385232804263,\n      -0.8994072969754852\n    ),\n    new ValidateBounds(\n      81.86756643628922,\n      25.05688089723257,\n      -1.9475235115390621\n    ),\n    new ValidateBounds(\n      70.90987389545768,\n      42.21705257720526,\n      -1.095154624057959\n    ),\n    new ValidateBounds(\n      61.08140805216186,\n      58.871233307587204,\n      2.1008764804626434\n    ),\n    new ValidateBounds(\n      54.97970219986448,\n      68.56530938366889,\n      7.327430728560569\n    ),\n    new ValidateBounds(\n      50.872250340749176,\n      74.60459195925529,\n      15.353576256896073\n    ),\n    new ValidateBounds(\n      47.27738650144558,\n      70.77855776427805,\n      11.70434273264508\n    ),\n    new ValidateBounds(42.58424189486517, 65.5411953138309, 7.595596439803797),\n    new ValidateBounds(\n      37.977492407254836,\n      60.74362621842075,\n      2.9847124951453474\n    ),\n    new ValidateBounds(\n      29.699290034849604,\n      51.90485023721311,\n      -4.830186634107636\n    )\n  ],\n  [\n    new ValidateBounds(\n      92.4362655169016,\n      7.542927467702299,\n      -6.039842848605881\n    ),\n    new ValidateBounds(\n      81.07399776904751,\n      19.563870217805036,\n      -15.719625491986044\n    ),\n    new ValidateBounds(\n      68.71394717711831,\n      33.79992812490556,\n      -26.49539972339321\n    ),\n    new ValidateBounds(\n      56.596161226236305,\n      47.5856631835152,\n      -36.480816605410915\n    ),\n    new ValidateBounds(\n      48.002791217624434,\n      57.30866443934879,\n      -43.2561127152548\n    ),\n    new ValidateBounds(\n      40.66211534692161,\n      64.01910773818436,\n      -48.05930162591041\n    ),\n    new ValidateBounds(\n      37.690702208992185,\n      61.13762767732481,\n      -49.384803274243026\n    ),\n    new ValidateBounds(\n      33.56291870731981,\n      57.637381239254104,\n      -51.39557249855828\n    ),\n    new ValidateBounds(\n      29.865391314234515,\n      54.29737439901333,\n      -52.6601973712463\n    ),\n    new ValidateBounds(\n      23.16724235420436,\n      48.51764437280498,\n      -55.16267949015293\n    )\n  ],\n  [\n    new ValidateBounds(\n      92.49103426017201,\n      4.712320025752947,\n      -6.532868071709763\n    ),\n    new ValidateBounds(\n      81.24668319505597,\n      11.50642734909485,\n      -16.666600637245367\n    ),\n    new ValidateBounds(\n      68.61488216554629,\n      20.395329051982824,\n      -28.522018851715416\n    ),\n    new ValidateBounds(\n      55.60369793053023,\n      30.933537768905005,\n      -41.16439122358484\n    ),\n    new ValidateBounds(\n      45.834566190969426,\n      39.28806272235674,\n      -50.523322052772635\n    ),\n    new ValidateBounds(\n      36.608620229358664,\n      47.29686002828143,\n      -59.111766586186846\n    ),\n    new ValidateBounds(\n      34.189791237562616,\n      46.60426065139123,\n      -59.53961627676729\n    ),\n    new ValidateBounds(\n      30.52713367338361,\n      46.01498224754519,\n      -60.19975052509064\n    ),\n    new ValidateBounds(\n      27.44585524877222,\n      44.96180431854785,\n      -60.46395810756433\n    ),\n    new ValidateBounds(\n      21.98627670328218,\n      44.29296076245473,\n      -60.93653655172098\n    )\n  ],\n  [\n    new ValidateBounds(\n      92.86314411983918,\n      1.5318147061061937,\n      -6.025243528950552\n    ),\n    new ValidateBounds(\n      81.8348073705298,\n      4.460934955458907,\n      -15.873561009736136\n    ),\n    new ValidateBounds(\n      69.7796913795672,\n      7.9043652558912765,\n      -26.3170846346932\n    ),\n    new ValidateBounds(\n      57.48786519938736,\n      12.681019504822533,\n      -37.23202012914528\n    ),\n    new ValidateBounds(\n      47.74592578811101,\n      18.520799302452374,\n      -46.47540679000397\n    ),\n    new ValidateBounds(\n      38.334403614455404,\n      25.57700668170812,\n      -55.28224153299287\n    ),\n    new ValidateBounds(\n      35.15116453901552,\n      26.231812080381168,\n      -54.53700978785404\n    ),\n    new ValidateBounds(\n      31.080429988007957,\n      27.07394930110124,\n      -53.97505274579958\n    ),\n    new ValidateBounds(\n      27.026672080454922,\n      28.165266427558983,\n      -53.28987325482218\n    ),\n    new ValidateBounds(\n      19.751201587921678,\n      30.60784576895101,\n      -52.13866519297474\n    )\n  ],\n  [\n    new ValidateBounds(\n      94.70682457348717,\n      -2.835484735987326,\n      -6.978044694792707\n    ),\n    new ValidateBounds(\n      86.8839842970016,\n      -5.16908728759552,\n      -17.88561192754956\n    ),\n    new ValidateBounds(\n      79.0451532401558,\n      -6.817753527015746,\n      -28.968537490432176\n    ),\n    new ValidateBounds(\n      71.15083697242613,\n      -5.994763756850707,\n      -39.72549451158927\n    ),\n    new ValidateBounds(\n      65.48106058907833,\n      -2.735745792537936,\n      -48.15471238926561\n    ),\n    new ValidateBounds(\n      60.43009440850862,\n      2.079928897321559,\n      -55.10935847069616\n    ),\n    new ValidateBounds(\n      55.62267676922188,\n      4.998684384486918,\n      -55.02164729429915\n    ),\n    new ValidateBounds(\n      49.27006645904875,\n      8.470398370314381,\n      -54.494796838457546\n    ),\n    new ValidateBounds(\n      43.16828856394358,\n      11.968483076143844,\n      -53.972567377977974\n    ),\n    new ValidateBounds(\n      32.17757793894193,\n      18.96054990229354,\n      -53.45146365049088\n    )\n  ],\n  [\n    new ValidateBounds(\n      95.35713467762652,\n      -4.797149155388203,\n      -6.550002550504308\n    ),\n    new ValidateBounds(\n      88.27942649540043,\n      -10.836006614583892,\n      -16.359361821940375\n    ),\n    new ValidateBounds(\n      81.10009044900976,\n      -15.323054522981716,\n      -26.419121191320947\n    ),\n    new ValidateBounds(\n      74.44713958259777,\n      -16.664432625362547,\n      -35.19702686900037\n    ),\n    new ValidateBounds(\n      69.87836465637318,\n      -14.291515332054693,\n      -41.827430329755174\n    ),\n    new ValidateBounds(\n      65.68851259178913,\n      -9.612635721963692,\n      -47.34091616039191\n    ),\n    new ValidateBounds(\n      60.88357994308973,\n      -7.252819027184943,\n      -46.67753731595634\n    ),\n    new ValidateBounds(\n      54.26166495426166,\n      -3.8141836897908066,\n      -45.97939475762498\n    ),\n    new ValidateBounds(\n      48.10661895072673,\n      -1.378998784464347,\n      -44.34466750206778\n    ),\n    new ValidateBounds(\n      36.34401147057282,\n      5.067812404713545,\n      -43.11786257561915\n    )\n  ],\n  [\n    new ValidateBounds(\n      95.69295154599753,\n      -6.898716127301141,\n      -3.994284229654421\n    ),\n    new ValidateBounds(\n      89.52842524059004,\n      -16.412398289601725,\n      -9.260466069266693\n    ),\n    new ValidateBounds(\n      83.32031214655748,\n      -24.83036840728098,\n      -14.568673583304603\n    ),\n    new ValidateBounds(\n      77.35338313752958,\n      -30.201708572215104,\n      -18.92358284721101\n    ),\n    new ValidateBounds(\n      73.45322093857781,\n      -31.88590390189383,\n      -21.130459992513686\n    ),\n    new ValidateBounds(\n      69.97638465064783,\n      -30.679850324547953,\n      -23.186685661136707\n    ),\n    new ValidateBounds(\n      64.44491716553777,\n      -29.08337434584457,\n      -21.154935769156214\n    ),\n    new ValidateBounds(\n      56.99816432961103,\n      -27.31081477279451,\n      -17.86988815767443\n    ),\n    new ValidateBounds(\n      49.75464182255671,\n      -25.335383503694242,\n      -15.024722591662787\n    ),\n    new ValidateBounds(\n      36.52725894264432,\n      -22.129641744194515,\n      -9.176159146894303\n    )\n  ],\n  [\n    new ValidateBounds(\n      94.18453941589918,\n      -6.08351703428972,\n      -1.5488916051161983\n    ),\n    new ValidateBounds(\n      85.68177077414457,\n      -15.333179440298606,\n      -2.8519825761476048\n    ),\n    new ValidateBounds(\n      76.85067847190405,\n      -24.844059173189713,\n      -3.8750785132192656\n    ),\n    new ValidateBounds(\n      68.02762242570138,\n      -32.566861154120716,\n      -4.015231084407134\n    ),\n    new ValidateBounds(\n      61.667257304525464,\n      -36.06752603289354,\n      -3.4734046401753815\n    ),\n    new ValidateBounds(\n      55.67310397390196,\n      -36.66069960626328,\n      -2.125617915169653\n    ),\n    new ValidateBounds(\n      51.059149495197715,\n      -34.65019160301408,\n      -1.3910484300432513\n    ),\n    new ValidateBounds(\n      45.269081019218405,\n      -32.13244775422941,\n      -0.4526371852697775\n    ),\n    new ValidateBounds(\n      39.36899076059384,\n      -29.25264468583161,\n      -0.03562564673170732\n    ),\n    new ValidateBounds(\n      28.58363043701477,\n      -24.585465516136413,\n      1.8037402162492389\n    )\n  ],\n  [\n    new ValidateBounds(\n      95.30530183565223,\n      -6.430415645739263,\n      4.292950594459599\n    ),\n    new ValidateBounds(\n      88.49014579152143,\n      -15.23147744952702,\n      10.848261177683138\n    ),\n    new ValidateBounds(\n      81.22616870575376,\n      -24.993886168551583,\n      18.144696803330884\n    ),\n    new ValidateBounds(\n      74.30361721558802,\n      -35.56088696067356,\n      26.781515251907727\n    ),\n    new ValidateBounds(\n      69.0430995277442,\n      -42.61556126595995,\n      33.17109563126665\n    ),\n    new ValidateBounds(\n      63.977421814072926,\n      -48.54292673319982,\n      39.73241526342939\n    ),\n    new ValidateBounds(\n      58.777960853461366,\n      -46.1153692478013,\n      37.838910745225576\n    ),\n    new ValidateBounds(\n      52.41108688974904,\n      -43.21761792485762,\n      35.62250659009424\n    ),\n    new ValidateBounds(\n      46.2813873076426,\n      -40.25816227675361,\n      33.32343229338761\n    ),\n    new ValidateBounds(\n      34.685655305814514,\n      -34.75343878510312,\n      28.866739034359767\n    )\n  ],\n  [\n    new ValidateBounds(\n      96.70518169355954,\n      -4.929987845095463,\n      6.397084523168894\n    ),\n    new ValidateBounds(\n      91.66416061199438,\n      -12.057032041945693,\n      16.054604579275143\n    ),\n    new ValidateBounds(\n      86.2244395865449,\n      -19.613646834080622,\n      26.384906423454236\n    ),\n    new ValidateBounds(\n      80.83404879636919,\n      -27.080171840756893,\n      37.378493742021334\n    ),\n    new ValidateBounds(\n      76.79543725108964,\n      -32.76659719736752,\n      45.912190572444445\n    ),\n    new ValidateBounds(\n      72.90025297028019,\n      -37.549139223927384,\n      53.51959496103027\n    ),\n    new ValidateBounds(\n      67.21532310272079,\n      -36.56304870773486,\n      50.49629051268894\n    ),\n    new ValidateBounds(\n      59.91051142210195,\n      -35.77011466063357,\n      46.56465847976187\n    ),\n    new ValidateBounds(\n      52.51015841084511,\n      -34.47903440699235,\n      42.20723868724268\n    ),\n    new ValidateBounds(\n      39.41191983353878,\n      -32.80460974352642,\n      35.255490585630014\n    )\n  ],\n  [\n    new ValidateBounds(\n      97.99506057883428,\n      -4.059632482741494,\n      9.355797602381521\n    ),\n    new ValidateBounds(\n      94.80926235976536,\n      -9.237091467352855,\n      23.230650064824985\n    ),\n    new ValidateBounds(\n      91.85205843526167,\n      -15.053917327011114,\n      38.86115182206598\n    ),\n    new ValidateBounds(\n      88.75812142080242,\n      -19.542900400164097,\n      53.71785675783709\n    ),\n    new ValidateBounds(\n      86.27404180729515,\n      -22.173992891121596,\n      63.978639065232514\n    ),\n    new ValidateBounds(\n      84.20566835376492,\n      -24.270643520989342,\n      72.79624067033038\n    ),\n    new ValidateBounds(\n      78.27915100603997,\n      -21.181850056402496,\n      68.82763412297965\n    ),\n    new ValidateBounds(\n      70.82385811892824,\n      -17.788148932525672,\n      64.00327817988128\n    ),\n    new ValidateBounds(\n      62.936867012868035,\n      -13.697412111684903,\n      58.513000509287835\n    ),\n    new ValidateBounds(\n      49.498610881452535,\n      -6.485230564384715,\n      49.67432722833751\n    )\n  ],\n  [\n    new ValidateBounds(\n      98.93885129752759,\n      -3.0098470288543178,\n      10.765736833790008\n    ),\n    new ValidateBounds(\n      97.22689784824074,\n      -6.174599368734491,\n      26.22932417355146\n    ),\n    new ValidateBounds(\n      95.58092947828766,\n      -8.907132848473886,\n      43.56297291446567\n    ),\n    new ValidateBounds(\n      94.09009515702486,\n      -10.509628942710735,\n      60.20019514231188\n    ),\n    new ValidateBounds(\n      93.06546746683087,\n      -11.008558476013008,\n      71.76500826005477\n    ),\n    new ValidateBounds(\n      92.12975017760128,\n      -10.830023094868302,\n      80.9090559640089\n    ),\n    new ValidateBounds(\n      87.12188349168609,\n      -2.3764300099239355,\n      78.14868195373407\n    ),\n    new ValidateBounds(\n      80.96200442419905,\n      8.849333792729064,\n      75.05050700092679\n    ),\n    new ValidateBounds(\n      75.00342770718086,\n      20.340173566879283,\n      72.24841925958934\n    ),\n    new ValidateBounds(\n      65.48207757431567,\n      39.647064970476094,\n      68.34872841768654\n    )\n  ],\n  [\n    new ValidateBounds(\n      97.5642392074337,\n      -1.445525639405032,\n      11.881254316297674\n    ),\n    new ValidateBounds(\n      93.67057953749456,\n      -1.8693096862072434,\n      30.02888670415651\n    ),\n    new ValidateBounds(\n      89.94571492804107,\n      -1.0224503814769692,\n      49.649542361642276\n    ),\n    new ValidateBounds(\n      86.71009164153801,\n      1.0496066396428194,\n      68.77377342409739\n    ),\n    new ValidateBounds(\n      83.78773993319211,\n      5.248231820098425,\n      78.92920457852716\n    ),\n    new ValidateBounds(\n      81.52191382080228,\n      9.403655370707199,\n      82.69257112982746\n    ),\n    new ValidateBounds(\n      78.17240973804697,\n      16.628512886531887,\n      81.09358318806208\n    ),\n    new ValidateBounds(\n      73.80899654381052,\n      26.53614315250874,\n      78.21754052181723\n    ),\n    new ValidateBounds(70.1134511665764, 35.3007623359744, 75.87510992138593),\n    new ValidateBounds(\n      63.86460405565717,\n      50.94648214505959,\n      72.17815682124423\n    )\n  ],\n  [\n    new ValidateBounds(\n      96.30459517801387,\n      0.923151172282477,\n      10.598439446083074\n    ),\n    new ValidateBounds(\n      90.68320082865087,\n      4.103774964681062,\n      26.485793721916128\n    ),\n    new ValidateBounds(\n      85.00055287186233,\n      9.047181758866651,\n      44.51407622580792\n    ),\n    new ValidateBounds(\n      79.42428495742953,\n      16.452610724439875,\n      62.08721739074201\n    ),\n    new ValidateBounds(\n      75.47792699289774,\n      23.395742928451867,\n      72.64347611236501\n    ),\n    new ValidateBounds(\n      72.04246561548388,\n      30.681921012382098,\n      77.08579298904603\n    ),\n    new ValidateBounds(\n      68.94724338946975,\n      35.22014778433863,\n      74.88425044595111\n    ),\n    new ValidateBounds(64.83017495535229, 40.91200730099703, 71.9596053545428),\n    new ValidateBounds(60.8534207471871, 46.41483590510681, 69.18061963415211),\n    new ValidateBounds(\n      54.77571742962287,\n      55.282751019360035,\n      65.10193403547922\n    )\n  ],\n  [\n    new ValidateBounds(\n      93.69219844671957,\n      5.763979334358293,\n      3.1700162796469034\n    ),\n    new ValidateBounds(\n      86.04629434276428,\n      15.750843803958192,\n      14.828476927090994\n    ),\n    new ValidateBounds(\n      77.54010042938336,\n      27.90113842540043,\n      25.99645229289065\n    ),\n    new ValidateBounds(\n      69.74095456707857,\n      41.14487377552256,\n      39.443320178900024\n    ),\n    new ValidateBounds(\n      64.37085344539341,\n      51.890379620443575,\n      50.81312471046415\n    ),\n    new ValidateBounds(\n      60.06780837277435,\n      61.65258736118817,\n      61.54771829165221\n    ),\n    new ValidateBounds(57.28707915232363, 60.3250664308812, 60.07341536376447),\n    new ValidateBounds(\n      53.810052616293845,\n      58.36760943780162,\n      58.19586806694884\n    ),\n    new ValidateBounds(\n      50.301352405105874,\n      56.40104898089937,\n      55.924141992404344\n    ),\n    new ValidateBounds(\n      43.86477994548343,\n      52.970887703910726,\n      52.30067989225532\n    )\n  ],\n  [\n    new ValidateBounds(\n      93.29864888069987,\n      0.9915456090475727,\n      1.442353076378411\n    ),\n    new ValidateBounds(\n      82.80884359004081,\n      3.116221903342209,\n      3.3523059451463055\n    ),\n    new ValidateBounds(\n      70.95493047668185,\n      5.469742193344784,\n      5.449009494553492\n    ),\n    new ValidateBounds(\n      58.712934619103066,\n      7.990991075363385,\n      8.352488495367627\n    ),\n    new ValidateBounds(\n      49.150208552875895,\n      10.570984981000397,\n      10.831440151197924\n    ),\n    new ValidateBounds(\n      39.63200151837749,\n      13.138881961627241,\n      13.531574711511885\n    ),\n    new ValidateBounds(\n      35.600996682015754,\n      12.40352847757295,\n      12.10432183902449\n    ),\n    new ValidateBounds(\n      30.084271265759952,\n      11.317148149878081,\n      10.547484304296217\n    ),\n    new ValidateBounds(\n      24.555014696416578,\n      10.816613316782464,\n      8.506555306791984\n    ),\n    new ValidateBounds(\n      18.35055226514404,\n      10.225725550338765,\n      7.058582769882571\n    )\n  ],\n  [\n    new ValidateBounds(\n      98.27202740980219,\n      -1.6418393644634932e-5,\n      6.567357457853973e-6\n    ),\n    new ValidateBounds(\n      96.53749336548567,\n      -1.616917905122861e-5,\n      6.467671598286984e-6\n    ),\n    new ValidateBounds(\n      94.0978378987781,\n      -1.581865383126768e-5,\n      6.327461532507073e-6\n    ),\n    new ValidateBounds(\n      89.17728373493613,\n      -1.511167768697419e-5,\n      6.044671074789676e-6\n    ),\n    new ValidateBounds(\n      76.61119902231323,\n      -1.330620591488696e-5,\n      5.322482343750323e-6\n    ),\n    new ValidateBounds(\n      65.11424774127516,\n      -1.1654345155598378e-5,\n      4.661738062239351e-6\n    ),\n    new ValidateBounds(\n      49.238989620828065,\n      -9.373417431124409e-6,\n      3.7493669724497636e-6\n    ),\n    new ValidateBounds(\n      41.14266843804848,\n      -8.210152946386273e-6,\n      3.2840611896567395e-6\n    ),\n    new ValidateBounds(\n      27.974857206003705,\n      -6.318226192236764e-6,\n      2.5272904768947058e-6\n    ),\n    new ValidateBounds(\n      12.740011331302725,\n      -4.129311698131133e-6,\n      1.6517246792524531e-6\n    )\n  ],\n  [\n    new ValidateBounds(\n      94.27665212516236,\n      -0.637571046109342,\n      -1.313515378996688\n    ),\n    new ValidateBounds(\n      85.77788001492097,\n      -2.2777811084512822,\n      -3.0177758416151557\n    ),\n    new ValidateBounds(\n      76.12296325015231,\n      -3.401502988883809,\n      -5.16867892977908\n    ),\n    new ValidateBounds(\n      66.16340108908365,\n      -4.819627183079045,\n      -7.520697631614404\n    ),\n    new ValidateBounds(\n      58.35752478513645,\n      -5.7195089100892105,\n      -9.165988916613488\n    ),\n    new ValidateBounds(\n      50.70748082202715,\n      -6.837992965799455,\n      -10.956055112409357\n    ),\n    new ValidateBounds(\n      44.85917867647632,\n      -6.411990559239578,\n      -9.74511982878765\n    ),\n    new ValidateBounds(\n      36.92458930566504,\n      -5.319878610845596,\n      -8.341943474561553\n    ),\n    new ValidateBounds(\n      29.115334784637618,\n      -4.168907828645069,\n      -6.8629962199973304\n    ),\n    new ValidateBounds(\n      19.958338450799914,\n      -3.3116721453186617,\n      -5.4486142104736786\n    )\n  ]\n]\nexport const Ld = [\n  2.048875457,\n  5.124792061,\n  8.751659557,\n  12.07628774,\n  13.91449542,\n  15.92738893,\n  15.46585818,\n  15.09779227,\n  15.13738673,\n  15.09818372\n]\nexport const Md = [\n  1.762442714,\n  4.213532634,\n  7.395827458,\n  11.07174158,\n  13.89634504,\n  16.37591477,\n  16.27071136,\n  16.54160806,\n  17.35916727,\n  19.88410864\n]\n// Local Functions\nfunction paletteGenerator (a, B, accent) {\n  const refPalletes = accent ? KdA : Kd\n  const b = B === undefined ? refPalletes : B\n  let d = b[0]\n  let e = -1\n  if (!b.length || !b[0].length) throw Error('Invalid golden palettes')\n  for (let c = Infinity, l = 0; l < b.length; l += 1) {\n    for (let h = 0; h < b[l].length && c > 0; h += 1) {\n      let g = b[l][h]\n      const f = (g.g + a.g) / 2\n      let m = Math.sqrt(g.A ** 2 + g.B ** 2)\n      let n = Math.sqrt(a.A ** 2 + a.B ** 2)\n      let u = (m + n) / 2\n      u = 0.5 * (1 - Math.sqrt(u ** 7 / (u ** 7 + 25 ** 7)))\n      let q = g.A * (1 + u)\n      let p = a.A * (1 + u)\n      let r = Math.sqrt(q ** 2 + g.B ** 2)\n      let t = Math.sqrt(p ** 2 + a.B ** 2)\n      u = t - r\n      const v = (r + t) / 2\n      q = getHueDegrees(g.B, q)\n      p = getHueDegrees(a.B, p)\n      r =\n        2 *\n        Math.sqrt(r * t) *\n        Math.sin(\n          (Math.abs(m) < 1e-4 || Math.abs(n) < 1e-4\n            ? 0\n            : Math.abs(p - q) <= 180\n              ? p - q\n              : p <= q ? p - q + 360 : p - q - 360) /\n            2 *\n            Math.PI /\n            180\n        )\n      m = Math.abs(m) < 1e-4 || Math.abs(n) < 1e-4\n        ? 0\n        : Math.abs(p - q) <= 180\n          ? (q + p) / 2\n          : q + p < 360 ? (q + p + 360) / 2 : (q + p - 360) / 2\n      n = 1 + 0.045 * v\n      t =\n        1 +\n        0.015 *\n          v *\n          (1 -\n            0.17 * Math.cos((m - 30) * Math.PI / 180) +\n            0.24 * Math.cos(2 * m * Math.PI / 180) +\n            0.32 * Math.cos((3 * m + 6) * Math.PI / 180) -\n            0.2 * Math.cos((4 * m - 63) * Math.PI / 180))\n      g = Math.sqrt(\n        ((a.g - g.g) /\n          (1 + 0.015 * (f - 50) ** 2 / Math.sqrt(20 + (f - 50) ** 2))) **\n          2 +\n          (u / (1 * n)) ** 2 +\n          (r / (1 * t)) ** 2 +\n          u /\n            (1 * n) *\n            Math.sqrt(v ** 7 / (v ** 7 + 25 ** 7)) *\n            Math.sin(\n              60 * Math.exp(-(((m - 275) / 25) ** 2)) * Math.PI / 180\n            ) *\n            -2 *\n            (r / (1 * t))\n      )\n      // eslint-disable-next-line\n      g < c && ((c = g), (d = b[l]), (e = h));\n    }\n  }\n  return {\n    fd: d,\n    ed: e\n  }\n}\nexport function buildPalette (a) {\n  let b\n  b = b === undefined ? Kd : b\n  const c = ConvertToLAB(a)\n  let d = paletteGenerator(c, b)\n  b = d.fd\n  d = d.ed\n  const e = b[d]\n  const l = computeLABterms(e)\n  const h = computeLABterms(c)\n  const g = computeLABterms(b[5]).T < 30\n  const f = l.g - h.g\n  const m = l.T - h.T\n  const n = l.hue - h.hue\n  const u = Ld[d]\n  const q = Md[d]\n  let p = 100\n  return b.map((R, T) => {\n    let r = R\n    let t = T\n    // eslint-disable-next-line\n    if (r === e) return (p = Math.max (h.g - 1.7, 0)), a;\n    r = computeLABterms(r)\n    let v = r.g - Ld[t] / u * f\n    v = Math.min(v, p)\n    t = new ConstrainHCLA(\n      minOfMax(v, 0, 100),\n      Math.max(0, g ? r.T - m : r.T - m * Math.min(Md[t] / q, 1.25)),\n      (r.hue - n + 360) % 360\n    )\n    p = Math.max(t.g - 1.7, 0)\n    r = t.hue * Math.PI / 180\n    t = new ValidateBounds(\n      t.g,\n      t.T * Math.cos(r),\n      t.T * Math.sin(r),\n      t.alpha\n    )\n    let z = (t.g + 16) / 116\n    r = 0.95047 * reverseTransformer(z + t.A / 500)\n    v = 1 * reverseTransformer(z)\n    z = 1.08883 * reverseTransformer(z - t.B / 200)\n    return new ConstrainRGBA(\n      minOfMax(\n        linear2sRGB(3.2404542 * r + -1.5371385 * v + -0.4985314 * z),\n        0,\n        1\n      ),\n      minOfMax(\n        linear2sRGB(-0.969266 * r + 1.8760108 * v + 0.041556 * z),\n        0,\n        1\n      ),\n      minOfMax(\n        linear2sRGB(0.0556434 * r + -0.2040259 * v + 1.0572252 * z),\n        0,\n        1\n      ),\n      t.alpha\n    )\n  })\n}\nexport function buildAccent (a) {\n  let b\n  b = b === undefined ? KdA : b\n  const c = ConvertToLAB(a)\n  let d = paletteGenerator(c, b)\n  b = d.fd\n  d = d.ed\n  const e = b[d]\n  const l = computeLABterms(e)\n  const h = computeLABterms(c)\n  const g = computeLABterms(b[2]).T < 30\n  const f = l.g - h.g\n  const m = l.T - h.T\n  const n = l.hue - h.hue\n  const u = Ld[d]\n  const q = Md[d]\n  let p = 100\n  return b.map((R, T) => {\n    let r = R\n    let t = T\n    // eslint-disable-next-line\n    if (r === e) return (p = Math.max (h.g - 1.7, 0)), a;\n    r = computeLABterms(r)\n    let v = r.g - Ld[t] / u * f\n    v = Math.min(v, p)\n    t = new ConstrainHCLA(\n      minOfMax(v, 0, 100),\n      Math.max(0, g ? r.T - m : r.T - m * Math.min(Md[t] / q, 1.25)),\n      (r.hue - n + 360) % 360\n    )\n    p = Math.max(t.g - 1.7, 0)\n    r = t.hue * Math.PI / 180\n    t = new ValidateBounds(\n      t.g,\n      t.T * Math.cos(r),\n      t.T * Math.sin(r),\n      t.alpha\n    )\n    let z = (t.g + 16) / 116\n    r = 0.95047 * reverseTransformer(z + t.A / 500)\n    v = 1 * reverseTransformer(z)\n    z = 1.08883 * reverseTransformer(z - t.B / 200)\n    return new ConstrainRGBA(\n      minOfMax(\n        linear2sRGB(3.2404542 * r + -1.5371385 * v + -0.4985314 * z),\n        0,\n        1\n      ),\n      minOfMax(\n        linear2sRGB(-0.969266 * r + 1.8760108 * v + 0.041556 * z),\n        0,\n        1\n      ),\n      minOfMax(\n        linear2sRGB(0.0556434 * r + -0.2040259 * v + 1.0572252 * z),\n        0,\n        1\n      ),\n      t.alpha\n    )\n  })\n}\n","import { keys, defaultOptions } from './global.constants.js'\nimport {\n  normalizeRGB,\n  rgbToHex,\n  hexToRgba,\n  getContrastText,\n  rotateColorBy\n} from './color.utils.js'\nimport { buildPalette, buildAccent } from './goldenPalettes.js'\nexport default class Matercolor {\n  constructor (color, options) {\n    this.palette = {}\n    this.color = color\n    this.options = options\n      ? Object.assign(defaultOptions, options)\n      : defaultOptions\n    this.complementary = () => rotateColorBy(this.color, 180)\n    this.firstAnalogous = () => rotateColorBy(this.color, -30)\n    this.secondAnalogous = () => rotateColorBy(this.color, 30)\n    this.firstTriadic = () => rotateColorBy(this.color, 60)\n    this.secondTriadic = () => rotateColorBy(this.color, 120)\n    this.firstTetradic = () => rotateColorBy(this.color, 30)\n    this.secondTetradic = () => rotateColorBy(this.color, 180)\n    this.thirdTetradic = () => rotateColorBy(this.color, -120)\n    this.palette.primary = this.makePalette('primary', true)\n    this.palette.complementary = this.makePalette('complementary', true)\n    this.palette.analogous = {}\n    this.palette.analogous.primary = this.makePalette('firstAnalogous', true)\n    this.palette.analogous.secondary = this.makePalette(\n      'secondAnalogous',\n      true\n    )\n    this.palette.triadic = {}\n    this.palette.triadic.primary = this.makePalette('firstTriadic', true)\n    this.palette.triadic.secondary = this.makePalette('secondTriadic', true)\n    this.palette.tetradic = {}\n    this.palette.tetradic.primary = this.makePalette('firstTetradic', true)\n    this.palette.tetradic.secondary = this.makePalette('secondTetradic', true)\n    this.palette.tetradic.tertiary = this.makePalette('thirdTetradic', true)\n  }\n\n  makePalette (paletteName, updateRoot = false) {\n    const localObject = {}\n    let Color\n    let Prefix\n    if (paletteName === 'primary') {\n      Prefix = ''\n      Color = hexToRgba(this.color)\n    } else if (paletteName === 'complementary') {\n      Prefix = 'C'\n      Color = hexToRgba(this.complementary())\n    } else if (paletteName === 'firstAnalogous') {\n      Prefix = 'A1'\n      Color = hexToRgba(this.firstAnalogous())\n    } else if (paletteName === 'secondAnalogous') {\n      Prefix = 'A2'\n      Color = hexToRgba(this.secondAnalogous())\n    } else if (paletteName === 'analogous') {\n      const analogousObject = {}\n      analogousObject.primary = this.makePalette('firstAnalogous', true)\n      analogousObject.secondary = this.makePalette('secondAnalogous', true)\n      return analogousObject\n    } else if (paletteName === 'firstTriadic') {\n      Prefix = 'T1'\n      Color = hexToRgba(this.firstTriadic())\n    } else if (paletteName === 'secondTriadic') {\n      Prefix = 'T2'\n      Color = hexToRgba(this.secondTriadic())\n    } else if (paletteName === 'triadic') {\n      const triadicObject = {}\n      triadicObject.primary = this.makePalette('firstTriadic', true)\n      triadicObject.secondary = this.makePalette('secondTriadic', true)\n      return triadicObject\n    } else if (paletteName === 'firstTetradic') {\n      Prefix = 'Q1'\n      Color = hexToRgba(this.firstTetradic())\n    } else if (paletteName === 'secondTetradic') {\n      Prefix = 'Q2'\n      Color = hexToRgba(this.secondTetradic())\n    } else if (paletteName === 'thirdTetradic') {\n      Prefix = 'Q3'\n      Color = hexToRgba(this.thirdTetradic())\n    }  else if (paletteName === 'triadic') {\n      const tetradicObject = {}\n      tetradicObject.primary = this.makePalette('firstTetradic', true)\n      tetradicObject.secondary = this.makePalette('secondTetradic', true)\n      tetradicObject.tertiary = this.makePalette('thirdTetradic', true)\n      return tetradicObject\n    }\n    const newPalette = buildPalette(normalizeRGB(Color)).map(u =>\n      rgbToHex(\n        Math.round(u.red * 255),\n        Math.round(u.green * 255),\n        Math.round(u.blue * 255)\n      )\n    )\n    const newAccent = buildAccent(normalizeRGB(Color)).map(u =>\n      rgbToHex(\n        Math.round(u.red * 255),\n        Math.round(u.green * 255),\n        Math.round(u.blue * 255)\n      )\n    )\n    newPalette.push(...newAccent)\n    for (let i = 0; i < keys.length; i += 1) {\n      const ckey = Prefix + keys[i]\n      let colorObject = {}\n      if (this.options.showContrastText) {\n        const rgb = hexToRgba(newPalette[i])\n        const contrastText = getContrastText(rgb, this.options.threshold)\n        if (updateRoot === true) {\n          this[ckey] = {}\n          this[ckey].hex = newPalette[i]\n          this[ckey].contrastText = contrastText\n        }\n        colorObject.hex = newPalette[i]\n        colorObject.contrastText = contrastText\n      } else {\n        if (updateRoot === true) this[ckey] = newPalette[i]\n        colorObject = newPalette[i]\n      }\n      localObject[keys[i]] = colorObject\n    }\n    return localObject\n  }\n}\n"],"names":["keys","defaultOptions","threshold","showContrastText","hexToRgba","hex","result","exec","r","parseInt","g","b","normalizeRGB","rgbObj","red","green","blue","alpha","componentToHex","c","toString","length","rgbToHex","getContrastText","Math","round","rotateColorBy","rotationAmount","rgb","max","min","h","s","l","d","hue2rgb","p","q","T","t","substring","isWithinRange","num","term","Number","isNaN","RangeError","sRGB2linear","a","forwardTransformer","minOfMax","linear2sRGB","reverseTransformer","getHueDegrees","abs","A","atan2","PI","ConstrainRGBA","constructor","D","undefined","this","ConstrainHCLA","hue","MAX_VALUE","computeLABterms","sqrt","B","ValidateBounds","ConvertToLAB","D65","KdA","Kd","Ld","Md","paletteGenerator","accent","e","Error","Infinity","f","m","n","u","v","sin","cos","exp","fd","ed","color","options","palette","Object","assign","complementary","firstAnalogous","secondAnalogous","firstTriadic","secondTriadic","firstTetradic","secondTetradic","thirdTetradic","primary","makePalette","analogous","secondary","triadic","tetradic","tertiary","paletteName","updateRoot","localObject","Color","Prefix","analogousObject","triadicObject","tetradicObject","newPalette","map","R","z","buildPalette","newAccent","buildAccent","push","i","ckey","colorObject","contrastText"],"mappings":"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EAAU,cAE1C,CACE,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,cAE1C,CACE,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,cAE1C,CACE,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,cAE1C,CACE,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,cAE1C,CACE,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,cAE1C,CACE,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,cAE1C,CACE,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,cAE1C,CACE,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,cAE1C,CACE,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,cAE1C,CACE,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,aACxC,IAAIkE,EAAa1D,EAAaR,EAAU,eAGtCqE,EAAK,CACT,CACE,IAAIJ,EACF,kBACA,kBACA,mBAEF,IAAIA,EAAe,iBAAkB,mBAAoB,kBACzD,IAAIA,EAAe,iBAAkB,iBAAkB,kBACvD,IAAIA,EACF,kBACA,mBACA,oBAEF,IAAIA,EACF,mBACA,iBACA,oBAEF,IAAIA,EACF,mBACA,kBACA,mBAEF,IAAIA,EACF,kBACA,iBACA,oBAEF,IAAIA,EACF,kBACA,kBACA,mBAEF,IAAIA,EACF,kBACA,kBACA,mBAEF,IAAIA,EACF,mBACA,mBACA,oBAGJ,CACE,IAAIA,EACF,kBACA,mBACC,mBAEH,IAAIA,EACF,kBACA,mBACC,oBAEH,IAAIA,EACF,kBACA,mBACC,mBAEH,IAAIA,EACF,kBACA,mBACA,oBAEF,IAAIA,EACF,kBACA,kBACA,mBAEF,IAAIA,EACF,mBACA,kBACA,oBAEF,IAAIA,EACF,kBACA,kBACA,mBAEF,IAAIA,EAAe,kBAAmB,iBAAkB,mBACxD,IAAIA,EACF,mBACA,kBACA,oBAEF,IAAIA,EACF,mBACA,mBACC,oBAGL,CACE,IAAIA,EACF,iBACA,mBACC,mBAEH,IAAIA,EACF,kBACA,oBACC,oBAEH,IAAIA,EACF,kBACA,mBACC,mBAEH,IAAIA,EACF,mBACA,kBACC,oBAEH,IAAIA,EACF,mBACA,mBACC,kBAEH,IAAIA,EACF,kBACA,mBACC,mBAEH,IAAIA,EACF,mBACA,mBACC,oBAEH,IAAIA,EACF,kBACA,oBACC,mBAEH,IAAIA,EACF,mBACA,mBACC,kBAEH,IAAIA,EACF,kBACA,mBACC,oBAGL,CACE,IAAIA,EACF,kBACA,mBACC,mBAEH,IAAIA,EACF,kBACA,mBACC,oBAEH,IAAIA,EACF,kBACA,oBACC,oBAEH,IAAIA,EACF,kBACA,oBACC,mBAEH,IAAIA,EACF,mBACA,mBACC,oBAEH,IAAIA,EACF,mBACA,mBACC,oBAEH,IAAIA,EACF,mBACA,mBACC,mBAEH,IAAIA,EACF,kBACA,mBACC,mBAEH,IAAIA,EACF,kBACA,mBACC,mBAEH,IAAIA,EACF,kBACA,mBACC,oBAGL,CACE,IAAIA,EACF,kBACA,oBACC,mBAEH,IAAIA,EACF,iBACA,mBACC,oBAEH,IAAIA,EACF,iBACA,oBACC,kBAEH,IAAIA,EACF,kBACA,oBACC,mBAEH,IAAIA,EACF,kBACA,oBACC,mBAEH,IAAIA,EACF,mBACA,mBACC,mBAEH,IAAIA,EACF,kBACA,oBACC,mBAEH,IAAIA,EACF,mBACA,mBACC,mBAEH,IAAIA,EACF,mBACA,oBACC,mBAEH,IAAIA,EACF,mBACA,mBACC,oBAGL,CACE,IAAIA,EACF,mBACC,mBACA,mBAEH,IAAIA,EACF,kBACC,kBACA,mBAEH,IAAIA,EACF,kBACC,mBACA,oBAEH,IAAIA,EACF,mBACC,mBACA,mBAEH,IAAIA,EACF,mBACC,mBACA,mBAEH,IAAIA,EACF,kBACA,mBACC,mBAEH,IAAIA,EACF,kBACA,mBACC,mBAEH,IAAIA,EACF,kBACA,mBACC,oBAEH,IAAIA,EACF,kBACA,oBACC,oBAEH,IAAIA,EACF,kBACA,mBACC,oBAGL,CACE,IAAIA,EACF,mBACC,mBACA,mBAEH,IAAIA,EACF,mBACC,oBACA,oBAEH,IAAIA,EACF,mBACC,oBACA,oBAEH,IAAIA,EACF,mBACC,oBACA,mBAEH,IAAIA,EACF,mBACC,oBACA,oBAEH,IAAIA,EACF,mBACC,mBACA,mBAEH,IAAIA,EACF,mBACC,mBACA,mBAEH,IAAIA,EACF,mBACC,oBACA,mBAEH,IAAIA,EACF,mBACC,mBACA,mBAEH,IAAIA,EACF,kBACA,mBACC,oBAGL,CACE,IAAIA,EACF,mBACC,mBACA,mBAEH,IAAIA,EACF,mBACC,oBACA,mBAEH,IAAIA,EACF,mBACC,mBACA,oBAEH,IAAIA,EACF,mBACC,oBACA,mBAEH,IAAIA,EACF,mBACC,mBACA,oBAEH,IAAIA,EACF,mBACC,oBACA,oBAEH,IAAIA,EACF,mBACC,mBACA,oBAEH,IAAIA,EACF,mBACC,mBACA,mBAEH,IAAIA,EACF,mBACC,oBACA,oBAEH,IAAIA,EACF,mBACC,oBACA,oBAGL,CACE,IAAIA,EACF,mBACC,kBACA,oBAEH,IAAIA,EACF,mBACC,oBACA,oBAEH,IAAIA,EACF,mBACC,oBACA,oBAEH,IAAIA,EACF,mBACC,oBACA,mBAEH,IAAIA,EACF,oBACC,mBACA,oBAEH,IAAIA,EACF,mBACC,mBACA,mBAEH,IAAIA,EACF,oBACC,mBACA,oBAEH,IAAIA,EACF,oBACC,mBACA,mBAEH,IAAIA,EACF,mBACC,mBACA,oBAEH,IAAIA,EACF,mBACC,mBACD,qBAGJ,CACE,IAAIA,EACF,mBACC,kBACD,mBAEF,IAAIA,EACF,mBACC,kBACD,oBAEF,IAAIA,EACF,mBACC,mBACD,oBAEF,IAAIA,EACF,mBACC,kBACD,oBAEF,IAAIA,EACF,kBACC,kBACD,mBAEF,IAAIA,EACF,oBACC,kBACD,mBAEF,IAAIA,EACF,oBACC,iBACD,oBAEF,IAAIA,EACF,mBACC,kBACD,mBAEF,IAAIA,EACF,kBACC,kBACD,mBAEF,IAAIA,EACF,oBACC,kBACD,qBAGJ,CACE,IAAIA,EACF,mBACC,kBACD,mBAEF,IAAIA,EACF,mBACC,mBACD,oBAEF,IAAIA,EACF,kBACC,mBACD,oBAEF,IAAIA,EACF,mBACC,mBACD,oBAEF,IAAIA,EACF,mBACC,kBACD,oBAEF,IAAIA,EACF,mBACC,mBACD,mBAEF,IAAIA,EACF,mBACC,kBACD,mBAEF,IAAIA,EACF,mBACC,kBACD,mBAEF,IAAIA,EACF,mBACC,kBACD,mBAEF,IAAIA,EACF,mBACC,kBACD,qBAGJ,CACE,IAAIA,EACF,mBACC,kBACD,mBAEF,IAAIA,EACF,mBACC,kBACD,oBAEF,IAAIA,EACF,mBACC,mBACD,mBAEF,IAAIA,EACF,mBACC,mBACD,mBAEF,IAAIA,EACF,mBACC,mBACD,oBAEF,IAAIA,EACF,mBACC,mBACD,mBAEF,IAAIA,EACF,mBACC,mBACD,mBAEF,IAAIA,EACF,mBACC,mBACD,mBAEF,IAAIA,EACF,oBACC,mBACD,oBAEF,IAAIA,EACF,oBACC,kBACD,oBAGJ,CACE,IAAIA,EACF,mBACC,mBACD,oBAEF,IAAIA,EACF,mBACC,kBACD,mBAEF,IAAIA,EACF,mBACC,kBACD,mBAEF,IAAIA,EACF,mBACC,mBACD,mBAEF,IAAIA,EACF,mBACC,mBACD,mBAEF,IAAIA,EACF,mBACC,mBACD,kBAEF,IAAIA,EACF,mBACC,mBACD,mBAEF,IAAIA,EACF,kBACA,kBACA,mBAEF,IAAIA,EACF,kBACA,mBACA,mBAEF,IAAIA,EACF,kBACA,mBACA,oBAGJ,CACE,IAAIA,EACF,kBACC,kBACD,oBAEF,IAAIA,EACF,mBACC,mBACD,mBAEF,IAAIA,EACF,mBACC,mBACD,oBAEF,IAAIA,EACF,kBACA,mBACA,mBAEF,IAAIA,EACF,kBACA,kBACA,mBAEF,IAAIA,EACF,kBACA,kBACA,mBAEF,IAAIA,EACF,kBACA,mBACA,mBAEF,IAAIA,EACF,kBACA,kBACA,mBAEF,IAAIA,EAAe,iBAAkB,iBAAkB,mBACvD,IAAIA,EACF,kBACA,kBACA,oBAGJ,CACE,IAAIA,EACF,kBACA,iBACA,oBAEF,IAAIA,EACF,kBACA,kBACA,oBAEF,IAAIA,EACF,kBACA,kBACA,mBAEF,IAAIA,EACF,kBACA,mBACA,mBAEF,IAAIA,EACF,kBACA,mBACA,mBAEF,IAAIA,EACF,kBACA,mBACA,mBAEF,IAAIA,EACF,kBACA,kBACA,mBAEF,IAAIA,EAAe,kBAAmB,kBAAmB,kBACzD,IAAIA,EAAe,iBAAkB,kBAAmB,mBACxD,IAAIA,EACF,kBACA,mBACA,oBAGJ,CACE,IAAIA,EACF,kBACA,kBACA,oBAEF,IAAIA,EACF,kBACA,mBACA,oBAEF,IAAIA,EACF,kBACA,kBACA,mBAEF,IAAIA,EACF,kBACA,kBACA,oBAEF,IAAIA,EACF,kBACA,mBACA,mBAEF,IAAIA,EACF,kBACA,kBACA,mBAEF,IAAIA,EAAe,kBAAmB,iBAAkB,mBACxD,IAAIA,EACF,mBACA,kBACA,mBAEF,IAAIA,EACF,mBACA,kBACA,oBAEF,IAAIA,EACF,kBACA,mBACA,oBAGJ,CACE,IAAIA,EACF,kBACA,kBACA,mBAEF,IAAIA,EACF,kBACA,kBACA,oBAEF,IAAIA,EACF,kBACA,kBACA,mBAEF,IAAIA,EACF,mBACA,kBACA,mBAEF,IAAIA,EACF,mBACA,mBACA,oBAEF,IAAIA,EACF,kBACA,mBACA,oBAEF,IAAIA,EACF,mBACA,kBACA,mBAEF,IAAIA,EACF,mBACA,mBACA,oBAEF,IAAIA,EACF,mBACA,mBACA,mBAEF,IAAIA,EACF,kBACA,mBACA,oBAGJ,CACE,IAAIA,EACF,mBACC,sBACD,sBAEF,IAAIA,EACF,mBACC,qBACD,sBAEF,IAAIA,EACF,kBACC,qBACD,sBAEF,IAAIA,EACF,mBACC,qBACD,sBAEF,IAAIA,EACF,mBACC,qBACD,sBAEF,IAAIA,EACF,mBACC,sBACD,sBAEF,IAAIA,EACF,oBACC,qBACD,uBAEF,IAAIA,EACF,mBACC,qBACD,uBAEF,IAAIA,EACF,oBACC,qBACD,uBAEF,IAAIA,EACF,oBACC,qBACD,wBAGJ,CACE,IAAIA,EACF,mBACC,kBACA,mBAEH,IAAIA,EACF,mBACC,oBACA,oBAEH,IAAIA,EACF,mBACC,mBACA,kBAEH,IAAIA,EACF,mBACC,mBACA,mBAEH,IAAIA,EACF,mBACC,oBACA,mBAEH,IAAIA,EACF,mBACC,mBACA,oBAEH,IAAIA,EACF,mBACC,mBACA,kBAEH,IAAIA,EACF,mBACC,mBACA,mBAEH,IAAIA,EACF,oBACC,mBACA,oBAEH,IAAIA,EACF,oBACC,oBACA,sBAIMK,EAAK,CAChB,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,aAEWC,EAAK,CAChB,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,aAGF,SAASC,EAAkB5B,EAAGoB,EAAGS,GAC/B,MACMlE,OAAUkD,IAANO,EADUS,EAASL,EAAMC,EACOL,EAC1C,IAAIlC,EAAIvB,EAAE,GACNmE,GAAK,EACT,IAAKnE,EAAEU,SAAWV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"}